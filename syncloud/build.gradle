apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    namespace "org.syncloud.android"
//    compileSdkVersion 35
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
//        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
//        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 24000
        versionName "24.00"
        multiDexEnabled true
    }

//    productFlavors {
//        prod {
//            applicationId "org.syncloud.android"
//        }
//    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "syncloud-${variant.versionName}.apk"
        }
    }

    signingConfigs {
        release {
            storeFile file('syncloud.keystore')
            storePassword ''
            keyAlias ''
            keyPassword ''
        }
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'log4j.properties', 'about.html', 'META-INF/beans.xml']
        }
    }


    allprojects {
        afterEvaluate { project ->
            def env = System.getenv()
            if (env.containsKey('KEY_STORE')) {
                def storeFile = new File(env['ANDROID_STORE_FILE'])
                storeFile.append(env['KEY_STORE'].decodeBase64())

                android.signingConfigs['release'].storeFile = storeFile
                android.signingConfigs['release'].storePassword = env['ANDROID_STORE_PASSWORD']
                android.signingConfigs['release'].keyAlias = env['ANDROID_KEY_ALIAS']
                android.signingConfigs['release'].keyPassword = env['ANDROID_KEY_PASSWORD']
            } else {
                logger.warn('KEY_STORE is not available, will not be able to publish to Google Play')
            }
        }
    }

}


dependencies {
    implementation 'log4j:log4j:1.2.17'
    implementation 'ch.acra:acra:5.11.3'
    implementation 'ch.acra:acra-mail:5.11.3'
    implementation 'ch.acra:acra-dialog:5.11.3'
    implementation 'de.mindpipe.android:android-logging-log4j:1.0.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
    implementation 'com.google.guava:guava:27.0.1-android'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.lsjwzh:materialloadingprogressbar:0.5.8-RELEASE'
    testImplementation 'junit:junit:4.10'
    testImplementation "io.mockk:mockk:1.12.0"
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.31"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'
    implementation 'org.conscrypt:conscrypt-android:2.5.0'
}
